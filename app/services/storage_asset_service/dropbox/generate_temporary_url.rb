module StorageAssetService
  module Dropbox
    class GenerateTemporaryUrl
      def initialize(storage_asset)
        @storage_asset = storage_asset
      end

      def call
        root_namespace_id = Rails.application.credentials.dig(:storage_assets, :dropbox, :root_namespace_id)

        access_token = StorageAssetSession.dropbox_access_token

        uri = URI("#{BASE_URL}/2/files/get_temporary_link")

        http = Net::HTTP.new(uri.host, uri.port)
        http.use_ssl = true

        request = Net::HTTP::Post.new(uri.request_uri)
        request['Authorization'] = "Bearer #{access_token.value}"
        request['Content-Type'] = 'application/json'
        request['Dropbox-API-Path-Root'] = { ".tag": 'root', root: root_namespace_id }.to_json
        request.body = {
          path: @storage_asset.full_path
        }.to_json

        response = http.request(request)

        raise StorageAssetService::Dropbox::InvalidRequestError, "Error: #{response.code} - #{response.body}" unless response.code == '200'

        response_body = JSON.parse(response.body).deep_symbolize_keys

        # Temporary links generated by Dropbox always expire in 4 hours.
        {
          url: response_body[:link],
          expires_at: 4.hours.from_now
        }
      end
    end
  end
end
